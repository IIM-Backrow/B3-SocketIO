services:
  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    container_name: socketio-backend
    # ports:
    #   - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-3000}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:5173}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "const http = require('http'); const options = { host: 'localhost', port: ${PORT:-3000}, path: '/api/status', timeout: 2000 }; const req = http.request(options, (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }); req.on('error', () => process.exit(1)); req.end();",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: socketio-frontend
    # ports:
    #   - "5173:80"
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    depends_on:
      - backend
